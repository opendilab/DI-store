// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.28.0
// 	protoc        v3.20.0
// source: node_tracker.proto

package node_tracker

import (
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	reflect "reflect"
	sync "sync"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

type ObjectDeleteRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	ObjectIdHexList []string `protobuf:"bytes,1,rep,name=object_id_hex_list,json=objectIdHexList,proto3" json:"object_id_hex_list,omitempty"`
}

func (x *ObjectDeleteRequest) Reset() {
	*x = ObjectDeleteRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_node_tracker_proto_msgTypes[0]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ObjectDeleteRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ObjectDeleteRequest) ProtoMessage() {}

func (x *ObjectDeleteRequest) ProtoReflect() protoreflect.Message {
	mi := &file_node_tracker_proto_msgTypes[0]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ObjectDeleteRequest.ProtoReflect.Descriptor instead.
func (*ObjectDeleteRequest) Descriptor() ([]byte, []int) {
	return file_node_tracker_proto_rawDescGZIP(), []int{0}
}

func (x *ObjectDeleteRequest) GetObjectIdHexList() []string {
	if x != nil {
		return x.ObjectIdHexList
	}
	return nil
}

type ObjectDeleteResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields
}

func (x *ObjectDeleteResponse) Reset() {
	*x = ObjectDeleteResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_node_tracker_proto_msgTypes[1]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ObjectDeleteResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ObjectDeleteResponse) ProtoMessage() {}

func (x *ObjectDeleteResponse) ProtoReflect() protoreflect.Message {
	mi := &file_node_tracker_proto_msgTypes[1]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ObjectDeleteResponse.ProtoReflect.Descriptor instead.
func (*ObjectDeleteResponse) Descriptor() ([]byte, []int) {
	return file_node_tracker_proto_rawDescGZIP(), []int{1}
}

type ObjectInfoRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	ObjectIdHexList []string `protobuf:"bytes,1,rep,name=object_id_hex_list,json=objectIdHexList,proto3" json:"object_id_hex_list,omitempty"`
}

func (x *ObjectInfoRequest) Reset() {
	*x = ObjectInfoRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_node_tracker_proto_msgTypes[2]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ObjectInfoRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ObjectInfoRequest) ProtoMessage() {}

func (x *ObjectInfoRequest) ProtoReflect() protoreflect.Message {
	mi := &file_node_tracker_proto_msgTypes[2]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ObjectInfoRequest.ProtoReflect.Descriptor instead.
func (*ObjectInfoRequest) Descriptor() ([]byte, []int) {
	return file_node_tracker_proto_rawDescGZIP(), []int{2}
}

func (x *ObjectInfoRequest) GetObjectIdHexList() []string {
	if x != nil {
		return x.ObjectIdHexList
	}
	return nil
}

type ObjectInfoResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	ObjectInfoList []*ObjectInfo `protobuf:"bytes,1,rep,name=object_info_list,json=objectInfoList,proto3" json:"object_info_list,omitempty"`
}

func (x *ObjectInfoResponse) Reset() {
	*x = ObjectInfoResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_node_tracker_proto_msgTypes[3]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ObjectInfoResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ObjectInfoResponse) ProtoMessage() {}

func (x *ObjectInfoResponse) ProtoReflect() protoreflect.Message {
	mi := &file_node_tracker_proto_msgTypes[3]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ObjectInfoResponse.ProtoReflect.Descriptor instead.
func (*ObjectInfoResponse) Descriptor() ([]byte, []int) {
	return file_node_tracker_proto_rawDescGZIP(), []int{3}
}

func (x *ObjectInfoResponse) GetObjectInfoList() []*ObjectInfo {
	if x != nil {
		return x.ObjectInfoList
	}
	return nil
}

type ObjectInfo struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	ObjectIdHex        string   `protobuf:"bytes,1,opt,name=object_id_hex,json=objectIdHex,proto3" json:"object_id_hex,omitempty"`
	ServerHostnameList []string `protobuf:"bytes,2,rep,name=server_hostname_list,json=serverHostnameList,proto3" json:"server_hostname_list,omitempty"`
}

func (x *ObjectInfo) Reset() {
	*x = ObjectInfo{}
	if protoimpl.UnsafeEnabled {
		mi := &file_node_tracker_proto_msgTypes[4]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ObjectInfo) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ObjectInfo) ProtoMessage() {}

func (x *ObjectInfo) ProtoReflect() protoreflect.Message {
	mi := &file_node_tracker_proto_msgTypes[4]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ObjectInfo.ProtoReflect.Descriptor instead.
func (*ObjectInfo) Descriptor() ([]byte, []int) {
	return file_node_tracker_proto_rawDescGZIP(), []int{4}
}

func (x *ObjectInfo) GetObjectIdHex() string {
	if x != nil {
		return x.ObjectIdHex
	}
	return ""
}

func (x *ObjectInfo) GetServerHostnameList() []string {
	if x != nil {
		return x.ServerHostnameList
	}
	return nil
}

type ServerInfoRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	ServerHostnameList []string `protobuf:"bytes,1,rep,name=server_hostname_list,json=serverHostnameList,proto3" json:"server_hostname_list,omitempty"`
}

func (x *ServerInfoRequest) Reset() {
	*x = ServerInfoRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_node_tracker_proto_msgTypes[5]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ServerInfoRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ServerInfoRequest) ProtoMessage() {}

func (x *ServerInfoRequest) ProtoReflect() protoreflect.Message {
	mi := &file_node_tracker_proto_msgTypes[5]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ServerInfoRequest.ProtoReflect.Descriptor instead.
func (*ServerInfoRequest) Descriptor() ([]byte, []int) {
	return file_node_tracker_proto_rawDescGZIP(), []int{5}
}

func (x *ServerInfoRequest) GetServerHostnameList() []string {
	if x != nil {
		return x.ServerHostnameList
	}
	return nil
}

type ServerInfoResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	StorageServerList []*StorageServer `protobuf:"bytes,1,rep,name=storage_server_list,json=storageServerList,proto3" json:"storage_server_list,omitempty"`
}

func (x *ServerInfoResponse) Reset() {
	*x = ServerInfoResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_node_tracker_proto_msgTypes[6]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ServerInfoResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ServerInfoResponse) ProtoMessage() {}

func (x *ServerInfoResponse) ProtoReflect() protoreflect.Message {
	mi := &file_node_tracker_proto_msgTypes[6]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ServerInfoResponse.ProtoReflect.Descriptor instead.
func (*ServerInfoResponse) Descriptor() ([]byte, []int) {
	return file_node_tracker_proto_rawDescGZIP(), []int{6}
}

func (x *ServerInfoResponse) GetStorageServerList() []*StorageServer {
	if x != nil {
		return x.StorageServerList
	}
	return nil
}

type RegisterObjectRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	ObjectIdHex      string   `protobuf:"bytes,1,opt,name=object_id_hex,json=objectIdHex,proto3" json:"object_id_hex,omitempty"`
	ServerHostname   string   `protobuf:"bytes,2,opt,name=server_hostname,json=serverHostname,proto3" json:"server_hostname,omitempty"`
	PushHostnameList []string `protobuf:"bytes,3,rep,name=push_hostname_list,json=pushHostnameList,proto3" json:"push_hostname_list,omitempty"`
	PushGroupList    []string `protobuf:"bytes,4,rep,name=push_group_list,json=pushGroupList,proto3" json:"push_group_list,omitempty"`
	LiveTime         float64  `protobuf:"fixed64,5,opt,name=live_time,json=liveTime,proto3" json:"live_time,omitempty"`
}

func (x *RegisterObjectRequest) Reset() {
	*x = RegisterObjectRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_node_tracker_proto_msgTypes[7]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *RegisterObjectRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*RegisterObjectRequest) ProtoMessage() {}

func (x *RegisterObjectRequest) ProtoReflect() protoreflect.Message {
	mi := &file_node_tracker_proto_msgTypes[7]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use RegisterObjectRequest.ProtoReflect.Descriptor instead.
func (*RegisterObjectRequest) Descriptor() ([]byte, []int) {
	return file_node_tracker_proto_rawDescGZIP(), []int{7}
}

func (x *RegisterObjectRequest) GetObjectIdHex() string {
	if x != nil {
		return x.ObjectIdHex
	}
	return ""
}

func (x *RegisterObjectRequest) GetServerHostname() string {
	if x != nil {
		return x.ServerHostname
	}
	return ""
}

func (x *RegisterObjectRequest) GetPushHostnameList() []string {
	if x != nil {
		return x.PushHostnameList
	}
	return nil
}

func (x *RegisterObjectRequest) GetPushGroupList() []string {
	if x != nil {
		return x.PushGroupList
	}
	return nil
}

func (x *RegisterObjectRequest) GetLiveTime() float64 {
	if x != nil {
		return x.LiveTime
	}
	return 0
}

type RegisterObjectResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields
}

func (x *RegisterObjectResponse) Reset() {
	*x = RegisterObjectResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_node_tracker_proto_msgTypes[8]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *RegisterObjectResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*RegisterObjectResponse) ProtoMessage() {}

func (x *RegisterObjectResponse) ProtoReflect() protoreflect.Message {
	mi := &file_node_tracker_proto_msgTypes[8]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use RegisterObjectResponse.ProtoReflect.Descriptor instead.
func (*RegisterObjectResponse) Descriptor() ([]byte, []int) {
	return file_node_tracker_proto_rawDescGZIP(), []int{8}
}

type StorageServer struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Hostname          string   `protobuf:"bytes,1,opt,name=hostname,proto3" json:"hostname,omitempty"`
	IpAddr            string   `protobuf:"bytes,2,opt,name=ip_addr,json=ipAddr,proto3" json:"ip_addr,omitempty"`
	PlasmaSocket      string   `protobuf:"bytes,3,opt,name=plasma_socket,json=plasmaSocket,proto3" json:"plasma_socket,omitempty"`
	RpcPort           int32    `protobuf:"varint,4,opt,name=rpc_port,json=rpcPort,proto3" json:"rpc_port,omitempty"`
	RpcTarget         string   `protobuf:"bytes,5,opt,name=rpc_target,json=rpcTarget,proto3" json:"rpc_target,omitempty"`
	ObjTransferPort   int32    `protobuf:"varint,6,opt,name=obj_transfer_port,json=objTransferPort,proto3" json:"obj_transfer_port,omitempty"`
	ObjTransferTarget string   `protobuf:"bytes,7,opt,name=obj_transfer_target,json=objTransferTarget,proto3" json:"obj_transfer_target,omitempty"`
	GroupList         []string `protobuf:"bytes,8,rep,name=group_list,json=groupList,proto3" json:"group_list,omitempty"`
}

func (x *StorageServer) Reset() {
	*x = StorageServer{}
	if protoimpl.UnsafeEnabled {
		mi := &file_node_tracker_proto_msgTypes[9]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *StorageServer) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*StorageServer) ProtoMessage() {}

func (x *StorageServer) ProtoReflect() protoreflect.Message {
	mi := &file_node_tracker_proto_msgTypes[9]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use StorageServer.ProtoReflect.Descriptor instead.
func (*StorageServer) Descriptor() ([]byte, []int) {
	return file_node_tracker_proto_rawDescGZIP(), []int{9}
}

func (x *StorageServer) GetHostname() string {
	if x != nil {
		return x.Hostname
	}
	return ""
}

func (x *StorageServer) GetIpAddr() string {
	if x != nil {
		return x.IpAddr
	}
	return ""
}

func (x *StorageServer) GetPlasmaSocket() string {
	if x != nil {
		return x.PlasmaSocket
	}
	return ""
}

func (x *StorageServer) GetRpcPort() int32 {
	if x != nil {
		return x.RpcPort
	}
	return 0
}

func (x *StorageServer) GetRpcTarget() string {
	if x != nil {
		return x.RpcTarget
	}
	return ""
}

func (x *StorageServer) GetObjTransferPort() int32 {
	if x != nil {
		return x.ObjTransferPort
	}
	return 0
}

func (x *StorageServer) GetObjTransferTarget() string {
	if x != nil {
		return x.ObjTransferTarget
	}
	return ""
}

func (x *StorageServer) GetGroupList() []string {
	if x != nil {
		return x.GroupList
	}
	return nil
}

type RegisterStorageServerResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	EtcdServer          *EtcdServer `protobuf:"bytes,1,opt,name=etcd_server,json=etcdServer,proto3" json:"etcd_server,omitempty"`
	StorageServerIpAddr string      `protobuf:"bytes,2,opt,name=storage_server_ip_addr,json=storageServerIpAddr,proto3" json:"storage_server_ip_addr,omitempty"`
}

func (x *RegisterStorageServerResponse) Reset() {
	*x = RegisterStorageServerResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_node_tracker_proto_msgTypes[10]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *RegisterStorageServerResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*RegisterStorageServerResponse) ProtoMessage() {}

func (x *RegisterStorageServerResponse) ProtoReflect() protoreflect.Message {
	mi := &file_node_tracker_proto_msgTypes[10]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use RegisterStorageServerResponse.ProtoReflect.Descriptor instead.
func (*RegisterStorageServerResponse) Descriptor() ([]byte, []int) {
	return file_node_tracker_proto_rawDescGZIP(), []int{10}
}

func (x *RegisterStorageServerResponse) GetEtcdServer() *EtcdServer {
	if x != nil {
		return x.EtcdServer
	}
	return nil
}

func (x *RegisterStorageServerResponse) GetStorageServerIpAddr() string {
	if x != nil {
		return x.StorageServerIpAddr
	}
	return ""
}

type StorageClient struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	ServerHostname string `protobuf:"bytes,1,opt,name=server_hostname,json=serverHostname,proto3" json:"server_hostname,omitempty"`
}

func (x *StorageClient) Reset() {
	*x = StorageClient{}
	if protoimpl.UnsafeEnabled {
		mi := &file_node_tracker_proto_msgTypes[11]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *StorageClient) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*StorageClient) ProtoMessage() {}

func (x *StorageClient) ProtoReflect() protoreflect.Message {
	mi := &file_node_tracker_proto_msgTypes[11]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use StorageClient.ProtoReflect.Descriptor instead.
func (*StorageClient) Descriptor() ([]byte, []int) {
	return file_node_tracker_proto_rawDescGZIP(), []int{11}
}

func (x *StorageClient) GetServerHostname() string {
	if x != nil {
		return x.ServerHostname
	}
	return ""
}

type RegisterStorageClientResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	EtcdServer    *EtcdServer    `protobuf:"bytes,1,opt,name=etcd_server,json=etcdServer,proto3" json:"etcd_server,omitempty"`
	StorageServer *StorageServer `protobuf:"bytes,2,opt,name=storage_server,json=storageServer,proto3" json:"storage_server,omitempty"`
}

func (x *RegisterStorageClientResponse) Reset() {
	*x = RegisterStorageClientResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_node_tracker_proto_msgTypes[12]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *RegisterStorageClientResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*RegisterStorageClientResponse) ProtoMessage() {}

func (x *RegisterStorageClientResponse) ProtoReflect() protoreflect.Message {
	mi := &file_node_tracker_proto_msgTypes[12]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use RegisterStorageClientResponse.ProtoReflect.Descriptor instead.
func (*RegisterStorageClientResponse) Descriptor() ([]byte, []int) {
	return file_node_tracker_proto_rawDescGZIP(), []int{12}
}

func (x *RegisterStorageClientResponse) GetEtcdServer() *EtcdServer {
	if x != nil {
		return x.EtcdServer
	}
	return nil
}

func (x *RegisterStorageClientResponse) GetStorageServer() *StorageServer {
	if x != nil {
		return x.StorageServer
	}
	return nil
}

type RegisterStorageGroupResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields
}

func (x *RegisterStorageGroupResponse) Reset() {
	*x = RegisterStorageGroupResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_node_tracker_proto_msgTypes[13]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *RegisterStorageGroupResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*RegisterStorageGroupResponse) ProtoMessage() {}

func (x *RegisterStorageGroupResponse) ProtoReflect() protoreflect.Message {
	mi := &file_node_tracker_proto_msgTypes[13]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use RegisterStorageGroupResponse.ProtoReflect.Descriptor instead.
func (*RegisterStorageGroupResponse) Descriptor() ([]byte, []int) {
	return file_node_tracker_proto_rawDescGZIP(), []int{13}
}

type UnregisterStorageGroupResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields
}

func (x *UnregisterStorageGroupResponse) Reset() {
	*x = UnregisterStorageGroupResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_node_tracker_proto_msgTypes[14]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *UnregisterStorageGroupResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*UnregisterStorageGroupResponse) ProtoMessage() {}

func (x *UnregisterStorageGroupResponse) ProtoReflect() protoreflect.Message {
	mi := &file_node_tracker_proto_msgTypes[14]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use UnregisterStorageGroupResponse.ProtoReflect.Descriptor instead.
func (*UnregisterStorageGroupResponse) Descriptor() ([]byte, []int) {
	return file_node_tracker_proto_rawDescGZIP(), []int{14}
}

type EtcdServer struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	IpAddr string `protobuf:"bytes,1,opt,name=ip_addr,json=ipAddr,proto3" json:"ip_addr,omitempty"`
	Port   int32  `protobuf:"varint,2,opt,name=port,proto3" json:"port,omitempty"`
}

func (x *EtcdServer) Reset() {
	*x = EtcdServer{}
	if protoimpl.UnsafeEnabled {
		mi := &file_node_tracker_proto_msgTypes[15]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *EtcdServer) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*EtcdServer) ProtoMessage() {}

func (x *EtcdServer) ProtoReflect() protoreflect.Message {
	mi := &file_node_tracker_proto_msgTypes[15]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use EtcdServer.ProtoReflect.Descriptor instead.
func (*EtcdServer) Descriptor() ([]byte, []int) {
	return file_node_tracker_proto_rawDescGZIP(), []int{15}
}

func (x *EtcdServer) GetIpAddr() string {
	if x != nil {
		return x.IpAddr
	}
	return ""
}

func (x *EtcdServer) GetPort() int32 {
	if x != nil {
		return x.Port
	}
	return 0
}

type UnregisterStorageServerResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields
}

func (x *UnregisterStorageServerResponse) Reset() {
	*x = UnregisterStorageServerResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_node_tracker_proto_msgTypes[16]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *UnregisterStorageServerResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*UnregisterStorageServerResponse) ProtoMessage() {}

func (x *UnregisterStorageServerResponse) ProtoReflect() protoreflect.Message {
	mi := &file_node_tracker_proto_msgTypes[16]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use UnregisterStorageServerResponse.ProtoReflect.Descriptor instead.
func (*UnregisterStorageServerResponse) Descriptor() ([]byte, []int) {
	return file_node_tracker_proto_rawDescGZIP(), []int{16}
}

var File_node_tracker_proto protoreflect.FileDescriptor

var file_node_tracker_proto_rawDesc = []byte{
	0x0a, 0x12, 0x6e, 0x6f, 0x64, 0x65, 0x5f, 0x74, 0x72, 0x61, 0x63, 0x6b, 0x65, 0x72, 0x2e, 0x70,
	0x72, 0x6f, 0x74, 0x6f, 0x12, 0x15, 0x64, 0x69, 0x5f, 0x73, 0x74, 0x6f, 0x72, 0x65, 0x2e, 0x6e,
	0x6f, 0x64, 0x65, 0x5f, 0x74, 0x72, 0x61, 0x63, 0x6b, 0x65, 0x72, 0x22, 0x42, 0x0a, 0x13, 0x4f,
	0x62, 0x6a, 0x65, 0x63, 0x74, 0x44, 0x65, 0x6c, 0x65, 0x74, 0x65, 0x52, 0x65, 0x71, 0x75, 0x65,
	0x73, 0x74, 0x12, 0x2b, 0x0a, 0x12, 0x6f, 0x62, 0x6a, 0x65, 0x63, 0x74, 0x5f, 0x69, 0x64, 0x5f,
	0x68, 0x65, 0x78, 0x5f, 0x6c, 0x69, 0x73, 0x74, 0x18, 0x01, 0x20, 0x03, 0x28, 0x09, 0x52, 0x0f,
	0x6f, 0x62, 0x6a, 0x65, 0x63, 0x74, 0x49, 0x64, 0x48, 0x65, 0x78, 0x4c, 0x69, 0x73, 0x74, 0x22,
	0x16, 0x0a, 0x14, 0x4f, 0x62, 0x6a, 0x65, 0x63, 0x74, 0x44, 0x65, 0x6c, 0x65, 0x74, 0x65, 0x52,
	0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22, 0x40, 0x0a, 0x11, 0x4f, 0x62, 0x6a, 0x65, 0x63,
	0x74, 0x49, 0x6e, 0x66, 0x6f, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x2b, 0x0a, 0x12,
	0x6f, 0x62, 0x6a, 0x65, 0x63, 0x74, 0x5f, 0x69, 0x64, 0x5f, 0x68, 0x65, 0x78, 0x5f, 0x6c, 0x69,
	0x73, 0x74, 0x18, 0x01, 0x20, 0x03, 0x28, 0x09, 0x52, 0x0f, 0x6f, 0x62, 0x6a, 0x65, 0x63, 0x74,
	0x49, 0x64, 0x48, 0x65, 0x78, 0x4c, 0x69, 0x73, 0x74, 0x22, 0x61, 0x0a, 0x12, 0x4f, 0x62, 0x6a,
	0x65, 0x63, 0x74, 0x49, 0x6e, 0x66, 0x6f, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12,
	0x4b, 0x0a, 0x10, 0x6f, 0x62, 0x6a, 0x65, 0x63, 0x74, 0x5f, 0x69, 0x6e, 0x66, 0x6f, 0x5f, 0x6c,
	0x69, 0x73, 0x74, 0x18, 0x01, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x21, 0x2e, 0x64, 0x69, 0x5f, 0x73,
	0x74, 0x6f, 0x72, 0x65, 0x2e, 0x6e, 0x6f, 0x64, 0x65, 0x5f, 0x74, 0x72, 0x61, 0x63, 0x6b, 0x65,
	0x72, 0x2e, 0x4f, 0x62, 0x6a, 0x65, 0x63, 0x74, 0x49, 0x6e, 0x66, 0x6f, 0x52, 0x0e, 0x6f, 0x62,
	0x6a, 0x65, 0x63, 0x74, 0x49, 0x6e, 0x66, 0x6f, 0x4c, 0x69, 0x73, 0x74, 0x22, 0x62, 0x0a, 0x0a,
	0x4f, 0x62, 0x6a, 0x65, 0x63, 0x74, 0x49, 0x6e, 0x66, 0x6f, 0x12, 0x22, 0x0a, 0x0d, 0x6f, 0x62,
	0x6a, 0x65, 0x63, 0x74, 0x5f, 0x69, 0x64, 0x5f, 0x68, 0x65, 0x78, 0x18, 0x01, 0x20, 0x01, 0x28,
	0x09, 0x52, 0x0b, 0x6f, 0x62, 0x6a, 0x65, 0x63, 0x74, 0x49, 0x64, 0x48, 0x65, 0x78, 0x12, 0x30,
	0x0a, 0x14, 0x73, 0x65, 0x72, 0x76, 0x65, 0x72, 0x5f, 0x68, 0x6f, 0x73, 0x74, 0x6e, 0x61, 0x6d,
	0x65, 0x5f, 0x6c, 0x69, 0x73, 0x74, 0x18, 0x02, 0x20, 0x03, 0x28, 0x09, 0x52, 0x12, 0x73, 0x65,
	0x72, 0x76, 0x65, 0x72, 0x48, 0x6f, 0x73, 0x74, 0x6e, 0x61, 0x6d, 0x65, 0x4c, 0x69, 0x73, 0x74,
	0x22, 0x45, 0x0a, 0x11, 0x53, 0x65, 0x72, 0x76, 0x65, 0x72, 0x49, 0x6e, 0x66, 0x6f, 0x52, 0x65,
	0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x30, 0x0a, 0x14, 0x73, 0x65, 0x72, 0x76, 0x65, 0x72, 0x5f,
	0x68, 0x6f, 0x73, 0x74, 0x6e, 0x61, 0x6d, 0x65, 0x5f, 0x6c, 0x69, 0x73, 0x74, 0x18, 0x01, 0x20,
	0x03, 0x28, 0x09, 0x52, 0x12, 0x73, 0x65, 0x72, 0x76, 0x65, 0x72, 0x48, 0x6f, 0x73, 0x74, 0x6e,
	0x61, 0x6d, 0x65, 0x4c, 0x69, 0x73, 0x74, 0x22, 0x6a, 0x0a, 0x12, 0x53, 0x65, 0x72, 0x76, 0x65,
	0x72, 0x49, 0x6e, 0x66, 0x6f, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x54, 0x0a,
	0x13, 0x73, 0x74, 0x6f, 0x72, 0x61, 0x67, 0x65, 0x5f, 0x73, 0x65, 0x72, 0x76, 0x65, 0x72, 0x5f,
	0x6c, 0x69, 0x73, 0x74, 0x18, 0x01, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x24, 0x2e, 0x64, 0x69, 0x5f,
	0x73, 0x74, 0x6f, 0x72, 0x65, 0x2e, 0x6e, 0x6f, 0x64, 0x65, 0x5f, 0x74, 0x72, 0x61, 0x63, 0x6b,
	0x65, 0x72, 0x2e, 0x53, 0x74, 0x6f, 0x72, 0x61, 0x67, 0x65, 0x53, 0x65, 0x72, 0x76, 0x65, 0x72,
	0x52, 0x11, 0x73, 0x74, 0x6f, 0x72, 0x61, 0x67, 0x65, 0x53, 0x65, 0x72, 0x76, 0x65, 0x72, 0x4c,
	0x69, 0x73, 0x74, 0x22, 0xd7, 0x01, 0x0a, 0x15, 0x52, 0x65, 0x67, 0x69, 0x73, 0x74, 0x65, 0x72,
	0x4f, 0x62, 0x6a, 0x65, 0x63, 0x74, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x22, 0x0a,
	0x0d, 0x6f, 0x62, 0x6a, 0x65, 0x63, 0x74, 0x5f, 0x69, 0x64, 0x5f, 0x68, 0x65, 0x78, 0x18, 0x01,
	0x20, 0x01, 0x28, 0x09, 0x52, 0x0b, 0x6f, 0x62, 0x6a, 0x65, 0x63, 0x74, 0x49, 0x64, 0x48, 0x65,
	0x78, 0x12, 0x27, 0x0a, 0x0f, 0x73, 0x65, 0x72, 0x76, 0x65, 0x72, 0x5f, 0x68, 0x6f, 0x73, 0x74,
	0x6e, 0x61, 0x6d, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0e, 0x73, 0x65, 0x72, 0x76,
	0x65, 0x72, 0x48, 0x6f, 0x73, 0x74, 0x6e, 0x61, 0x6d, 0x65, 0x12, 0x2c, 0x0a, 0x12, 0x70, 0x75,
	0x73, 0x68, 0x5f, 0x68, 0x6f, 0x73, 0x74, 0x6e, 0x61, 0x6d, 0x65, 0x5f, 0x6c, 0x69, 0x73, 0x74,
	0x18, 0x03, 0x20, 0x03, 0x28, 0x09, 0x52, 0x10, 0x70, 0x75, 0x73, 0x68, 0x48, 0x6f, 0x73, 0x74,
	0x6e, 0x61, 0x6d, 0x65, 0x4c, 0x69, 0x73, 0x74, 0x12, 0x26, 0x0a, 0x0f, 0x70, 0x75, 0x73, 0x68,
	0x5f, 0x67, 0x72, 0x6f, 0x75, 0x70, 0x5f, 0x6c, 0x69, 0x73, 0x74, 0x18, 0x04, 0x20, 0x03, 0x28,
	0x09, 0x52, 0x0d, 0x70, 0x75, 0x73, 0x68, 0x47, 0x72, 0x6f, 0x75, 0x70, 0x4c, 0x69, 0x73, 0x74,
	0x12, 0x1b, 0x0a, 0x09, 0x6c, 0x69, 0x76, 0x65, 0x5f, 0x74, 0x69, 0x6d, 0x65, 0x18, 0x05, 0x20,
	0x01, 0x28, 0x01, 0x52, 0x08, 0x6c, 0x69, 0x76, 0x65, 0x54, 0x69, 0x6d, 0x65, 0x22, 0x18, 0x0a,
	0x16, 0x52, 0x65, 0x67, 0x69, 0x73, 0x74, 0x65, 0x72, 0x4f, 0x62, 0x6a, 0x65, 0x63, 0x74, 0x52,
	0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22, 0x9e, 0x02, 0x0a, 0x0d, 0x53, 0x74, 0x6f, 0x72,
	0x61, 0x67, 0x65, 0x53, 0x65, 0x72, 0x76, 0x65, 0x72, 0x12, 0x1a, 0x0a, 0x08, 0x68, 0x6f, 0x73,
	0x74, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x08, 0x68, 0x6f, 0x73,
	0x74, 0x6e, 0x61, 0x6d, 0x65, 0x12, 0x17, 0x0a, 0x07, 0x69, 0x70, 0x5f, 0x61, 0x64, 0x64, 0x72,
	0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x06, 0x69, 0x70, 0x41, 0x64, 0x64, 0x72, 0x12, 0x23,
	0x0a, 0x0d, 0x70, 0x6c, 0x61, 0x73, 0x6d, 0x61, 0x5f, 0x73, 0x6f, 0x63, 0x6b, 0x65, 0x74, 0x18,
	0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0c, 0x70, 0x6c, 0x61, 0x73, 0x6d, 0x61, 0x53, 0x6f, 0x63,
	0x6b, 0x65, 0x74, 0x12, 0x19, 0x0a, 0x08, 0x72, 0x70, 0x63, 0x5f, 0x70, 0x6f, 0x72, 0x74, 0x18,
	0x04, 0x20, 0x01, 0x28, 0x05, 0x52, 0x07, 0x72, 0x70, 0x63, 0x50, 0x6f, 0x72, 0x74, 0x12, 0x1d,
	0x0a, 0x0a, 0x72, 0x70, 0x63, 0x5f, 0x74, 0x61, 0x72, 0x67, 0x65, 0x74, 0x18, 0x05, 0x20, 0x01,
	0x28, 0x09, 0x52, 0x09, 0x72, 0x70, 0x63, 0x54, 0x61, 0x72, 0x67, 0x65, 0x74, 0x12, 0x2a, 0x0a,
	0x11, 0x6f, 0x62, 0x6a, 0x5f, 0x74, 0x72, 0x61, 0x6e, 0x73, 0x66, 0x65, 0x72, 0x5f, 0x70, 0x6f,
	0x72, 0x74, 0x18, 0x06, 0x20, 0x01, 0x28, 0x05, 0x52, 0x0f, 0x6f, 0x62, 0x6a, 0x54, 0x72, 0x61,
	0x6e, 0x73, 0x66, 0x65, 0x72, 0x50, 0x6f, 0x72, 0x74, 0x12, 0x2e, 0x0a, 0x13, 0x6f, 0x62, 0x6a,
	0x5f, 0x74, 0x72, 0x61, 0x6e, 0x73, 0x66, 0x65, 0x72, 0x5f, 0x74, 0x61, 0x72, 0x67, 0x65, 0x74,
	0x18, 0x07, 0x20, 0x01, 0x28, 0x09, 0x52, 0x11, 0x6f, 0x62, 0x6a, 0x54, 0x72, 0x61, 0x6e, 0x73,
	0x66, 0x65, 0x72, 0x54, 0x61, 0x72, 0x67, 0x65, 0x74, 0x12, 0x1d, 0x0a, 0x0a, 0x67, 0x72, 0x6f,
	0x75, 0x70, 0x5f, 0x6c, 0x69, 0x73, 0x74, 0x18, 0x08, 0x20, 0x03, 0x28, 0x09, 0x52, 0x09, 0x67,
	0x72, 0x6f, 0x75, 0x70, 0x4c, 0x69, 0x73, 0x74, 0x22, 0x98, 0x01, 0x0a, 0x1d, 0x52, 0x65, 0x67,
	0x69, 0x73, 0x74, 0x65, 0x72, 0x53, 0x74, 0x6f, 0x72, 0x61, 0x67, 0x65, 0x53, 0x65, 0x72, 0x76,
	0x65, 0x72, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x42, 0x0a, 0x0b, 0x65, 0x74,
	0x63, 0x64, 0x5f, 0x73, 0x65, 0x72, 0x76, 0x65, 0x72, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32,
	0x21, 0x2e, 0x64, 0x69, 0x5f, 0x73, 0x74, 0x6f, 0x72, 0x65, 0x2e, 0x6e, 0x6f, 0x64, 0x65, 0x5f,
	0x74, 0x72, 0x61, 0x63, 0x6b, 0x65, 0x72, 0x2e, 0x45, 0x74, 0x63, 0x64, 0x53, 0x65, 0x72, 0x76,
	0x65, 0x72, 0x52, 0x0a, 0x65, 0x74, 0x63, 0x64, 0x53, 0x65, 0x72, 0x76, 0x65, 0x72, 0x12, 0x33,
	0x0a, 0x16, 0x73, 0x74, 0x6f, 0x72, 0x61, 0x67, 0x65, 0x5f, 0x73, 0x65, 0x72, 0x76, 0x65, 0x72,
	0x5f, 0x69, 0x70, 0x5f, 0x61, 0x64, 0x64, 0x72, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x13,
	0x73, 0x74, 0x6f, 0x72, 0x61, 0x67, 0x65, 0x53, 0x65, 0x72, 0x76, 0x65, 0x72, 0x49, 0x70, 0x41,
	0x64, 0x64, 0x72, 0x22, 0x38, 0x0a, 0x0d, 0x53, 0x74, 0x6f, 0x72, 0x61, 0x67, 0x65, 0x43, 0x6c,
	0x69, 0x65, 0x6e, 0x74, 0x12, 0x27, 0x0a, 0x0f, 0x73, 0x65, 0x72, 0x76, 0x65, 0x72, 0x5f, 0x68,
	0x6f, 0x73, 0x74, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0e, 0x73,
	0x65, 0x72, 0x76, 0x65, 0x72, 0x48, 0x6f, 0x73, 0x74, 0x6e, 0x61, 0x6d, 0x65, 0x22, 0xb0, 0x01,
	0x0a, 0x1d, 0x52, 0x65, 0x67, 0x69, 0x73, 0x74, 0x65, 0x72, 0x53, 0x74, 0x6f, 0x72, 0x61, 0x67,
	0x65, 0x43, 0x6c, 0x69, 0x65, 0x6e, 0x74, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12,
	0x42, 0x0a, 0x0b, 0x65, 0x74, 0x63, 0x64, 0x5f, 0x73, 0x65, 0x72, 0x76, 0x65, 0x72, 0x18, 0x01,
	0x20, 0x01, 0x28, 0x0b, 0x32, 0x21, 0x2e, 0x64, 0x69, 0x5f, 0x73, 0x74, 0x6f, 0x72, 0x65, 0x2e,
	0x6e, 0x6f, 0x64, 0x65, 0x5f, 0x74, 0x72, 0x61, 0x63, 0x6b, 0x65, 0x72, 0x2e, 0x45, 0x74, 0x63,
	0x64, 0x53, 0x65, 0x72, 0x76, 0x65, 0x72, 0x52, 0x0a, 0x65, 0x74, 0x63, 0x64, 0x53, 0x65, 0x72,
	0x76, 0x65, 0x72, 0x12, 0x4b, 0x0a, 0x0e, 0x73, 0x74, 0x6f, 0x72, 0x61, 0x67, 0x65, 0x5f, 0x73,
	0x65, 0x72, 0x76, 0x65, 0x72, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x24, 0x2e, 0x64, 0x69,
	0x5f, 0x73, 0x74, 0x6f, 0x72, 0x65, 0x2e, 0x6e, 0x6f, 0x64, 0x65, 0x5f, 0x74, 0x72, 0x61, 0x63,
	0x6b, 0x65, 0x72, 0x2e, 0x53, 0x74, 0x6f, 0x72, 0x61, 0x67, 0x65, 0x53, 0x65, 0x72, 0x76, 0x65,
	0x72, 0x52, 0x0d, 0x73, 0x74, 0x6f, 0x72, 0x61, 0x67, 0x65, 0x53, 0x65, 0x72, 0x76, 0x65, 0x72,
	0x22, 0x1e, 0x0a, 0x1c, 0x52, 0x65, 0x67, 0x69, 0x73, 0x74, 0x65, 0x72, 0x53, 0x74, 0x6f, 0x72,
	0x61, 0x67, 0x65, 0x47, 0x72, 0x6f, 0x75, 0x70, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65,
	0x22, 0x20, 0x0a, 0x1e, 0x55, 0x6e, 0x72, 0x65, 0x67, 0x69, 0x73, 0x74, 0x65, 0x72, 0x53, 0x74,
	0x6f, 0x72, 0x61, 0x67, 0x65, 0x47, 0x72, 0x6f, 0x75, 0x70, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e,
	0x73, 0x65, 0x22, 0x39, 0x0a, 0x0a, 0x45, 0x74, 0x63, 0x64, 0x53, 0x65, 0x72, 0x76, 0x65, 0x72,
	0x12, 0x17, 0x0a, 0x07, 0x69, 0x70, 0x5f, 0x61, 0x64, 0x64, 0x72, 0x18, 0x01, 0x20, 0x01, 0x28,
	0x09, 0x52, 0x06, 0x69, 0x70, 0x41, 0x64, 0x64, 0x72, 0x12, 0x12, 0x0a, 0x04, 0x70, 0x6f, 0x72,
	0x74, 0x18, 0x02, 0x20, 0x01, 0x28, 0x05, 0x52, 0x04, 0x70, 0x6f, 0x72, 0x74, 0x22, 0x21, 0x0a,
	0x1f, 0x55, 0x6e, 0x72, 0x65, 0x67, 0x69, 0x73, 0x74, 0x65, 0x72, 0x53, 0x74, 0x6f, 0x72, 0x61,
	0x67, 0x65, 0x53, 0x65, 0x72, 0x76, 0x65, 0x72, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65,
	0x32, 0x98, 0x08, 0x0a, 0x0b, 0x4e, 0x6f, 0x64, 0x65, 0x54, 0x72, 0x61, 0x63, 0x6b, 0x65, 0x72,
	0x12, 0x77, 0x0a, 0x17, 0x72, 0x65, 0x67, 0x69, 0x73, 0x74, 0x65, 0x72, 0x5f, 0x73, 0x74, 0x6f,
	0x72, 0x61, 0x67, 0x65, 0x5f, 0x73, 0x65, 0x72, 0x76, 0x65, 0x72, 0x12, 0x24, 0x2e, 0x64, 0x69,
	0x5f, 0x73, 0x74, 0x6f, 0x72, 0x65, 0x2e, 0x6e, 0x6f, 0x64, 0x65, 0x5f, 0x74, 0x72, 0x61, 0x63,
	0x6b, 0x65, 0x72, 0x2e, 0x53, 0x74, 0x6f, 0x72, 0x61, 0x67, 0x65, 0x53, 0x65, 0x72, 0x76, 0x65,
	0x72, 0x1a, 0x34, 0x2e, 0x64, 0x69, 0x5f, 0x73, 0x74, 0x6f, 0x72, 0x65, 0x2e, 0x6e, 0x6f, 0x64,
	0x65, 0x5f, 0x74, 0x72, 0x61, 0x63, 0x6b, 0x65, 0x72, 0x2e, 0x52, 0x65, 0x67, 0x69, 0x73, 0x74,
	0x65, 0x72, 0x53, 0x74, 0x6f, 0x72, 0x61, 0x67, 0x65, 0x53, 0x65, 0x72, 0x76, 0x65, 0x72, 0x52,
	0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22, 0x00, 0x12, 0x7b, 0x0a, 0x19, 0x75, 0x6e, 0x72,
	0x65, 0x67, 0x69, 0x73, 0x74, 0x65, 0x72, 0x5f, 0x73, 0x74, 0x6f, 0x72, 0x61, 0x67, 0x65, 0x5f,
	0x73, 0x65, 0x72, 0x76, 0x65, 0x72, 0x12, 0x24, 0x2e, 0x64, 0x69, 0x5f, 0x73, 0x74, 0x6f, 0x72,
	0x65, 0x2e, 0x6e, 0x6f, 0x64, 0x65, 0x5f, 0x74, 0x72, 0x61, 0x63, 0x6b, 0x65, 0x72, 0x2e, 0x53,
	0x74, 0x6f, 0x72, 0x61, 0x67, 0x65, 0x53, 0x65, 0x72, 0x76, 0x65, 0x72, 0x1a, 0x36, 0x2e, 0x64,
	0x69, 0x5f, 0x73, 0x74, 0x6f, 0x72, 0x65, 0x2e, 0x6e, 0x6f, 0x64, 0x65, 0x5f, 0x74, 0x72, 0x61,
	0x63, 0x6b, 0x65, 0x72, 0x2e, 0x55, 0x6e, 0x72, 0x65, 0x67, 0x69, 0x73, 0x74, 0x65, 0x72, 0x53,
	0x74, 0x6f, 0x72, 0x61, 0x67, 0x65, 0x53, 0x65, 0x72, 0x76, 0x65, 0x72, 0x52, 0x65, 0x73, 0x70,
	0x6f, 0x6e, 0x73, 0x65, 0x22, 0x00, 0x12, 0x75, 0x0a, 0x16, 0x72, 0x65, 0x67, 0x69, 0x73, 0x74,
	0x65, 0x72, 0x5f, 0x73, 0x74, 0x6f, 0x72, 0x61, 0x67, 0x65, 0x5f, 0x67, 0x72, 0x6f, 0x75, 0x70,
	0x12, 0x24, 0x2e, 0x64, 0x69, 0x5f, 0x73, 0x74, 0x6f, 0x72, 0x65, 0x2e, 0x6e, 0x6f, 0x64, 0x65,
	0x5f, 0x74, 0x72, 0x61, 0x63, 0x6b, 0x65, 0x72, 0x2e, 0x53, 0x74, 0x6f, 0x72, 0x61, 0x67, 0x65,
	0x53, 0x65, 0x72, 0x76, 0x65, 0x72, 0x1a, 0x33, 0x2e, 0x64, 0x69, 0x5f, 0x73, 0x74, 0x6f, 0x72,
	0x65, 0x2e, 0x6e, 0x6f, 0x64, 0x65, 0x5f, 0x74, 0x72, 0x61, 0x63, 0x6b, 0x65, 0x72, 0x2e, 0x52,
	0x65, 0x67, 0x69, 0x73, 0x74, 0x65, 0x72, 0x53, 0x74, 0x6f, 0x72, 0x61, 0x67, 0x65, 0x47, 0x72,
	0x6f, 0x75, 0x70, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22, 0x00, 0x12, 0x79, 0x0a,
	0x18, 0x75, 0x6e, 0x72, 0x65, 0x67, 0x69, 0x73, 0x74, 0x65, 0x72, 0x5f, 0x73, 0x74, 0x6f, 0x72,
	0x61, 0x67, 0x65, 0x5f, 0x67, 0x72, 0x6f, 0x75, 0x70, 0x12, 0x24, 0x2e, 0x64, 0x69, 0x5f, 0x73,
	0x74, 0x6f, 0x72, 0x65, 0x2e, 0x6e, 0x6f, 0x64, 0x65, 0x5f, 0x74, 0x72, 0x61, 0x63, 0x6b, 0x65,
	0x72, 0x2e, 0x53, 0x74, 0x6f, 0x72, 0x61, 0x67, 0x65, 0x53, 0x65, 0x72, 0x76, 0x65, 0x72, 0x1a,
	0x35, 0x2e, 0x64, 0x69, 0x5f, 0x73, 0x74, 0x6f, 0x72, 0x65, 0x2e, 0x6e, 0x6f, 0x64, 0x65, 0x5f,
	0x74, 0x72, 0x61, 0x63, 0x6b, 0x65, 0x72, 0x2e, 0x55, 0x6e, 0x72, 0x65, 0x67, 0x69, 0x73, 0x74,
	0x65, 0x72, 0x53, 0x74, 0x6f, 0x72, 0x61, 0x67, 0x65, 0x47, 0x72, 0x6f, 0x75, 0x70, 0x52, 0x65,
	0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22, 0x00, 0x12, 0x77, 0x0a, 0x17, 0x72, 0x65, 0x67, 0x69,
	0x73, 0x74, 0x65, 0x72, 0x5f, 0x73, 0x74, 0x6f, 0x72, 0x61, 0x67, 0x65, 0x5f, 0x63, 0x6c, 0x69,
	0x65, 0x6e, 0x74, 0x12, 0x24, 0x2e, 0x64, 0x69, 0x5f, 0x73, 0x74, 0x6f, 0x72, 0x65, 0x2e, 0x6e,
	0x6f, 0x64, 0x65, 0x5f, 0x74, 0x72, 0x61, 0x63, 0x6b, 0x65, 0x72, 0x2e, 0x53, 0x74, 0x6f, 0x72,
	0x61, 0x67, 0x65, 0x43, 0x6c, 0x69, 0x65, 0x6e, 0x74, 0x1a, 0x34, 0x2e, 0x64, 0x69, 0x5f, 0x73,
	0x74, 0x6f, 0x72, 0x65, 0x2e, 0x6e, 0x6f, 0x64, 0x65, 0x5f, 0x74, 0x72, 0x61, 0x63, 0x6b, 0x65,
	0x72, 0x2e, 0x52, 0x65, 0x67, 0x69, 0x73, 0x74, 0x65, 0x72, 0x53, 0x74, 0x6f, 0x72, 0x61, 0x67,
	0x65, 0x43, 0x6c, 0x69, 0x65, 0x6e, 0x74, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22,
	0x00, 0x12, 0x70, 0x0a, 0x0f, 0x72, 0x65, 0x67, 0x69, 0x73, 0x74, 0x65, 0x72, 0x5f, 0x6f, 0x62,
	0x6a, 0x65, 0x63, 0x74, 0x12, 0x2c, 0x2e, 0x64, 0x69, 0x5f, 0x73, 0x74, 0x6f, 0x72, 0x65, 0x2e,
	0x6e, 0x6f, 0x64, 0x65, 0x5f, 0x74, 0x72, 0x61, 0x63, 0x6b, 0x65, 0x72, 0x2e, 0x52, 0x65, 0x67,
	0x69, 0x73, 0x74, 0x65, 0x72, 0x4f, 0x62, 0x6a, 0x65, 0x63, 0x74, 0x52, 0x65, 0x71, 0x75, 0x65,
	0x73, 0x74, 0x1a, 0x2d, 0x2e, 0x64, 0x69, 0x5f, 0x73, 0x74, 0x6f, 0x72, 0x65, 0x2e, 0x6e, 0x6f,
	0x64, 0x65, 0x5f, 0x74, 0x72, 0x61, 0x63, 0x6b, 0x65, 0x72, 0x2e, 0x52, 0x65, 0x67, 0x69, 0x73,
	0x74, 0x65, 0x72, 0x4f, 0x62, 0x6a, 0x65, 0x63, 0x74, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73,
	0x65, 0x22, 0x00, 0x12, 0x64, 0x0a, 0x0b, 0x73, 0x65, 0x72, 0x76, 0x65, 0x72, 0x5f, 0x69, 0x6e,
	0x66, 0x6f, 0x12, 0x28, 0x2e, 0x64, 0x69, 0x5f, 0x73, 0x74, 0x6f, 0x72, 0x65, 0x2e, 0x6e, 0x6f,
	0x64, 0x65, 0x5f, 0x74, 0x72, 0x61, 0x63, 0x6b, 0x65, 0x72, 0x2e, 0x53, 0x65, 0x72, 0x76, 0x65,
	0x72, 0x49, 0x6e, 0x66, 0x6f, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x29, 0x2e, 0x64,
	0x69, 0x5f, 0x73, 0x74, 0x6f, 0x72, 0x65, 0x2e, 0x6e, 0x6f, 0x64, 0x65, 0x5f, 0x74, 0x72, 0x61,
	0x63, 0x6b, 0x65, 0x72, 0x2e, 0x53, 0x65, 0x72, 0x76, 0x65, 0x72, 0x49, 0x6e, 0x66, 0x6f, 0x52,
	0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22, 0x00, 0x12, 0x64, 0x0a, 0x0b, 0x6f, 0x62, 0x6a,
	0x65, 0x63, 0x74, 0x5f, 0x69, 0x6e, 0x66, 0x6f, 0x12, 0x28, 0x2e, 0x64, 0x69, 0x5f, 0x73, 0x74,
	0x6f, 0x72, 0x65, 0x2e, 0x6e, 0x6f, 0x64, 0x65, 0x5f, 0x74, 0x72, 0x61, 0x63, 0x6b, 0x65, 0x72,
	0x2e, 0x4f, 0x62, 0x6a, 0x65, 0x63, 0x74, 0x49, 0x6e, 0x66, 0x6f, 0x52, 0x65, 0x71, 0x75, 0x65,
	0x73, 0x74, 0x1a, 0x29, 0x2e, 0x64, 0x69, 0x5f, 0x73, 0x74, 0x6f, 0x72, 0x65, 0x2e, 0x6e, 0x6f,
	0x64, 0x65, 0x5f, 0x74, 0x72, 0x61, 0x63, 0x6b, 0x65, 0x72, 0x2e, 0x4f, 0x62, 0x6a, 0x65, 0x63,
	0x74, 0x49, 0x6e, 0x66, 0x6f, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22, 0x00, 0x12,
	0x6a, 0x0a, 0x0d, 0x6f, 0x62, 0x6a, 0x65, 0x63, 0x74, 0x5f, 0x64, 0x65, 0x6c, 0x65, 0x74, 0x65,
	0x12, 0x2a, 0x2e, 0x64, 0x69, 0x5f, 0x73, 0x74, 0x6f, 0x72, 0x65, 0x2e, 0x6e, 0x6f, 0x64, 0x65,
	0x5f, 0x74, 0x72, 0x61, 0x63, 0x6b, 0x65, 0x72, 0x2e, 0x4f, 0x62, 0x6a, 0x65, 0x63, 0x74, 0x44,
	0x65, 0x6c, 0x65, 0x74, 0x65, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x2b, 0x2e, 0x64,
	0x69, 0x5f, 0x73, 0x74, 0x6f, 0x72, 0x65, 0x2e, 0x6e, 0x6f, 0x64, 0x65, 0x5f, 0x74, 0x72, 0x61,
	0x63, 0x6b, 0x65, 0x72, 0x2e, 0x4f, 0x62, 0x6a, 0x65, 0x63, 0x74, 0x44, 0x65, 0x6c, 0x65, 0x74,
	0x65, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22, 0x00, 0x42, 0x1a, 0x5a, 0x18, 0x64,
	0x69, 0x5f, 0x73, 0x74, 0x6f, 0x72, 0x65, 0x2f, 0x70, 0x62, 0x2f, 0x6e, 0x6f, 0x64, 0x65, 0x5f,
	0x74, 0x72, 0x61, 0x63, 0x6b, 0x65, 0x72, 0x62, 0x06, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x33,
}

var (
	file_node_tracker_proto_rawDescOnce sync.Once
	file_node_tracker_proto_rawDescData = file_node_tracker_proto_rawDesc
)

func file_node_tracker_proto_rawDescGZIP() []byte {
	file_node_tracker_proto_rawDescOnce.Do(func() {
		file_node_tracker_proto_rawDescData = protoimpl.X.CompressGZIP(file_node_tracker_proto_rawDescData)
	})
	return file_node_tracker_proto_rawDescData
}

var file_node_tracker_proto_msgTypes = make([]protoimpl.MessageInfo, 17)
var file_node_tracker_proto_goTypes = []interface{}{
	(*ObjectDeleteRequest)(nil),             // 0: di_store.node_tracker.ObjectDeleteRequest
	(*ObjectDeleteResponse)(nil),            // 1: di_store.node_tracker.ObjectDeleteResponse
	(*ObjectInfoRequest)(nil),               // 2: di_store.node_tracker.ObjectInfoRequest
	(*ObjectInfoResponse)(nil),              // 3: di_store.node_tracker.ObjectInfoResponse
	(*ObjectInfo)(nil),                      // 4: di_store.node_tracker.ObjectInfo
	(*ServerInfoRequest)(nil),               // 5: di_store.node_tracker.ServerInfoRequest
	(*ServerInfoResponse)(nil),              // 6: di_store.node_tracker.ServerInfoResponse
	(*RegisterObjectRequest)(nil),           // 7: di_store.node_tracker.RegisterObjectRequest
	(*RegisterObjectResponse)(nil),          // 8: di_store.node_tracker.RegisterObjectResponse
	(*StorageServer)(nil),                   // 9: di_store.node_tracker.StorageServer
	(*RegisterStorageServerResponse)(nil),   // 10: di_store.node_tracker.RegisterStorageServerResponse
	(*StorageClient)(nil),                   // 11: di_store.node_tracker.StorageClient
	(*RegisterStorageClientResponse)(nil),   // 12: di_store.node_tracker.RegisterStorageClientResponse
	(*RegisterStorageGroupResponse)(nil),    // 13: di_store.node_tracker.RegisterStorageGroupResponse
	(*UnregisterStorageGroupResponse)(nil),  // 14: di_store.node_tracker.UnregisterStorageGroupResponse
	(*EtcdServer)(nil),                      // 15: di_store.node_tracker.EtcdServer
	(*UnregisterStorageServerResponse)(nil), // 16: di_store.node_tracker.UnregisterStorageServerResponse
}
var file_node_tracker_proto_depIdxs = []int32{
	4,  // 0: di_store.node_tracker.ObjectInfoResponse.object_info_list:type_name -> di_store.node_tracker.ObjectInfo
	9,  // 1: di_store.node_tracker.ServerInfoResponse.storage_server_list:type_name -> di_store.node_tracker.StorageServer
	15, // 2: di_store.node_tracker.RegisterStorageServerResponse.etcd_server:type_name -> di_store.node_tracker.EtcdServer
	15, // 3: di_store.node_tracker.RegisterStorageClientResponse.etcd_server:type_name -> di_store.node_tracker.EtcdServer
	9,  // 4: di_store.node_tracker.RegisterStorageClientResponse.storage_server:type_name -> di_store.node_tracker.StorageServer
	9,  // 5: di_store.node_tracker.NodeTracker.register_storage_server:input_type -> di_store.node_tracker.StorageServer
	9,  // 6: di_store.node_tracker.NodeTracker.unregister_storage_server:input_type -> di_store.node_tracker.StorageServer
	9,  // 7: di_store.node_tracker.NodeTracker.register_storage_group:input_type -> di_store.node_tracker.StorageServer
	9,  // 8: di_store.node_tracker.NodeTracker.unregister_storage_group:input_type -> di_store.node_tracker.StorageServer
	11, // 9: di_store.node_tracker.NodeTracker.register_storage_client:input_type -> di_store.node_tracker.StorageClient
	7,  // 10: di_store.node_tracker.NodeTracker.register_object:input_type -> di_store.node_tracker.RegisterObjectRequest
	5,  // 11: di_store.node_tracker.NodeTracker.server_info:input_type -> di_store.node_tracker.ServerInfoRequest
	2,  // 12: di_store.node_tracker.NodeTracker.object_info:input_type -> di_store.node_tracker.ObjectInfoRequest
	0,  // 13: di_store.node_tracker.NodeTracker.object_delete:input_type -> di_store.node_tracker.ObjectDeleteRequest
	10, // 14: di_store.node_tracker.NodeTracker.register_storage_server:output_type -> di_store.node_tracker.RegisterStorageServerResponse
	16, // 15: di_store.node_tracker.NodeTracker.unregister_storage_server:output_type -> di_store.node_tracker.UnregisterStorageServerResponse
	13, // 16: di_store.node_tracker.NodeTracker.register_storage_group:output_type -> di_store.node_tracker.RegisterStorageGroupResponse
	14, // 17: di_store.node_tracker.NodeTracker.unregister_storage_group:output_type -> di_store.node_tracker.UnregisterStorageGroupResponse
	12, // 18: di_store.node_tracker.NodeTracker.register_storage_client:output_type -> di_store.node_tracker.RegisterStorageClientResponse
	8,  // 19: di_store.node_tracker.NodeTracker.register_object:output_type -> di_store.node_tracker.RegisterObjectResponse
	6,  // 20: di_store.node_tracker.NodeTracker.server_info:output_type -> di_store.node_tracker.ServerInfoResponse
	3,  // 21: di_store.node_tracker.NodeTracker.object_info:output_type -> di_store.node_tracker.ObjectInfoResponse
	1,  // 22: di_store.node_tracker.NodeTracker.object_delete:output_type -> di_store.node_tracker.ObjectDeleteResponse
	14, // [14:23] is the sub-list for method output_type
	5,  // [5:14] is the sub-list for method input_type
	5,  // [5:5] is the sub-list for extension type_name
	5,  // [5:5] is the sub-list for extension extendee
	0,  // [0:5] is the sub-list for field type_name
}

func init() { file_node_tracker_proto_init() }
func file_node_tracker_proto_init() {
	if File_node_tracker_proto != nil {
		return
	}
	if !protoimpl.UnsafeEnabled {
		file_node_tracker_proto_msgTypes[0].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ObjectDeleteRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_node_tracker_proto_msgTypes[1].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ObjectDeleteResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_node_tracker_proto_msgTypes[2].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ObjectInfoRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_node_tracker_proto_msgTypes[3].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ObjectInfoResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_node_tracker_proto_msgTypes[4].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ObjectInfo); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_node_tracker_proto_msgTypes[5].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ServerInfoRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_node_tracker_proto_msgTypes[6].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ServerInfoResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_node_tracker_proto_msgTypes[7].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*RegisterObjectRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_node_tracker_proto_msgTypes[8].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*RegisterObjectResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_node_tracker_proto_msgTypes[9].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*StorageServer); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_node_tracker_proto_msgTypes[10].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*RegisterStorageServerResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_node_tracker_proto_msgTypes[11].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*StorageClient); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_node_tracker_proto_msgTypes[12].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*RegisterStorageClientResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_node_tracker_proto_msgTypes[13].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*RegisterStorageGroupResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_node_tracker_proto_msgTypes[14].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*UnregisterStorageGroupResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_node_tracker_proto_msgTypes[15].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*EtcdServer); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_node_tracker_proto_msgTypes[16].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*UnregisterStorageServerResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
	}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: file_node_tracker_proto_rawDesc,
			NumEnums:      0,
			NumMessages:   17,
			NumExtensions: 0,
			NumServices:   1,
		},
		GoTypes:           file_node_tracker_proto_goTypes,
		DependencyIndexes: file_node_tracker_proto_depIdxs,
		MessageInfos:      file_node_tracker_proto_msgTypes,
	}.Build()
	File_node_tracker_proto = out.File
	file_node_tracker_proto_rawDesc = nil
	file_node_tracker_proto_goTypes = nil
	file_node_tracker_proto_depIdxs = nil
}
