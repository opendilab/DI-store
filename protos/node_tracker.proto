syntax = "proto3";

option go_package = "di_store/pb/node_tracker";

package di_store.node_tracker;

service NodeTracker {
    rpc register_storage_server(StorageServer) returns (RegisterStorageServerResponse) {}
    rpc unregister_storage_server(StorageServer) returns (UnregisterStorageServerResponse) {}
    rpc register_storage_group(StorageServer) returns (RegisterStorageGroupResponse) {}
    rpc unregister_storage_group(StorageServer) returns (UnregisterStorageGroupResponse) {}
    rpc register_storage_client(StorageClient) returns (RegisterStorageClientResponse) {}
    rpc register_object(RegisterObjectRequest) returns (RegisterObjectResponse) {}
    rpc server_info(ServerInfoRequest) returns (ServerInfoResponse) {}
    rpc object_info(ObjectInfoRequest) returns (ObjectInfoResponse) {}
    rpc object_delete(ObjectDeleteRequest) returns (ObjectDeleteResponse) {}
}


message ObjectDeleteRequest {
    repeated string object_id_hex_list = 1;
}

message ObjectDeleteResponse {}

message ObjectInfoRequest {
    repeated string object_id_hex_list = 1;
}

message ObjectInfoResponse {
    repeated ObjectInfo object_info_list = 1;
}

message ObjectInfo {
    string object_id_hex = 1;
    repeated string server_hostname_list = 2;
}

message ServerInfoRequest {
    repeated string server_hostname_list = 1;
}

message ServerInfoResponse {
    repeated StorageServer storage_server_list = 1;
}

message RegisterObjectRequest {
    string object_id_hex = 1;
    string server_hostname = 2;
    repeated string push_hostname_list = 3;
    repeated string push_group_list = 4;
    double live_time = 5;
}

message RegisterObjectResponse {}

message StorageServer {
    string hostname = 1;
    string ip_addr = 2;
    string plasma_socket = 3;
    int32 rpc_port = 4;
    string rpc_target = 5;
    int32 obj_transfer_port = 6;
    string obj_transfer_target = 7;
    repeated string group_list = 8;
}

message RegisterStorageServerResponse {
    EtcdServer etcd_server = 1;
    string storage_server_ip_addr = 2;
}

message StorageClient {
    string server_hostname = 1;
}

message RegisterStorageClientResponse {
    EtcdServer etcd_server = 1;
    StorageServer storage_server = 2;
}

message RegisterStorageGroupResponse {}

message UnregisterStorageGroupResponse {}

message EtcdServer {
    string ip_addr = 1;
    int32 port = 2;
}

message UnregisterStorageServerResponse {}